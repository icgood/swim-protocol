syntax = "proto3";

package swimprotocol.grpc.proto;

enum SwimStatus {
  OFFLINE = 0;
  ONLINE = 1;
}

message SwimPing {
}

message SwimPingReq {
  string target = 3;
}

message SwimAck {
  bool online = 1;
}

message SwimUpdate {
  string address = 1;
  oneof optional_modified { uint64 modified = 2; }
  SwimStatus status = 3;
  map<string, string> metadata = 4;
}

message SwimGossip {
  string source = 1;
  uint64 clock = 2;
  repeated SwimUpdate updates = 3;
}

service SwimProtocol {
  rpc Ping (SwimPing) returns (SwimAck) {}
  rpc PingReq (SwimPingReq) returns (SwimAck) {}
  rpc Sync (SwimGossip) returns (SwimGossip) {}
}
